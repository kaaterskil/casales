<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Model;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EmailInteraction extends \Application\Model\EmailInteraction implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getBcc()
    {
        $this->__load();
        return parent::getBcc();
    }

    public function setBcc($bcc)
    {
        $this->__load();
        return parent::setBcc($bcc);
    }

    public function getCc()
    {
        $this->__load();
        return parent::getCc();
    }

    public function setCc($cc)
    {
        $this->__load();
        return parent::setCc($cc);
    }

    public function getDeliveryReceiptRequested()
    {
        $this->__load();
        return parent::getDeliveryReceiptRequested();
    }

    public function setDeliveryReceiptRequested($deliveryReceiptRequested)
    {
        $this->__load();
        return parent::setDeliveryReceiptRequested($deliveryReceiptRequested);
    }

    public function getDiscriminator()
    {
        $this->__load();
        return parent::getDiscriminator();
    }

    public function getMessageId()
    {
        $this->__load();
        return parent::getMessageId();
    }

    public function setMessageId($messageId)
    {
        $this->__load();
        return parent::setMessageId($messageId);
    }

    public function getMimetype()
    {
        $this->__load();
        return parent::getMimetype();
    }

    public function setMimetype($mimetype)
    {
        $this->__load();
        return parent::setMimetype($mimetype);
    }

    public function getReadReceiptRequested()
    {
        $this->__load();
        return parent::getReadReceiptRequested();
    }

    public function setReadReceiptRequested($readReceiptRequested)
    {
        $this->__load();
        return parent::setReadReceiptRequested($readReceiptRequested);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setStatus($status = NULL)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getIssueSend()
    {
        $this->__load();
        return parent::getIssueSend();
    }

    public function setIssueSend($issueSend)
    {
        $this->__load();
        return parent::setIssueSend($issueSend);
    }

    public function getAttachments()
    {
        $this->__load();
        return parent::getAttachments();
    }

    public function setAttachments(\Doctrine\Common\Collections\ArrayCollection $attachments)
    {
        $this->__load();
        return parent::setAttachments($attachments);
    }

    public function addAttachment(\Application\Model\Attachment $attachment)
    {
        $this->__load();
        return parent::addAttachment($attachment);
    }

    public function removeAttachment(\Application\Model\Attachment $attachment)
    {
        $this->__load();
        return parent::removeAttachment($attachment);
    }

    public function setSendStartDate($startDate)
    {
        $this->__load();
        return parent::setSendStartDate($startDate);
    }

    public function setSendEndDate($endDate)
    {
        $this->__load();
        return parent::setSendEndDate($endDate);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getBulkOperation()
    {
        $this->__load();
        return parent::getBulkOperation();
    }

    public function setBulkOperation(\Application\Model\BulkOperation $bulkOperation = NULL)
    {
        $this->__load();
        return parent::setBulkOperation($bulkOperation);
    }

    public function getDirection()
    {
        $this->__load();
        return parent::getDirection();
    }

    public function setDirection($direction = NULL)
    {
        $this->__load();
        return parent::setDirection($direction);
    }

    public function getFrom()
    {
        $this->__load();
        return parent::getFrom();
    }

    public function setFrom($from)
    {
        $this->__load();
        return parent::setFrom($from);
    }

    public function getTo()
    {
        $this->__load();
        return parent::getTo();
    }

    public function setTo($to)
    {
        $this->__load();
        return parent::setTo($to);
    }

    public function equals(\Application\Stdlib\Object $o)
    {
        $this->__load();
        return parent::equals($o);
    }

    public function getActualStart()
    {
        $this->__load();
        return parent::getActualStart();
    }

    public function setActualStart($actualStart = NULL, $bypassFilter = false)
    {
        $this->__load();
        return parent::setActualStart($actualStart, $bypassFilter);
    }

    public function getActualEnd()
    {
        $this->__load();
        return parent::getActualEnd();
    }

    public function setActualEnd($actualEnd = NULL, $bypassFilter = false)
    {
        $this->__load();
        return parent::setActualEnd($actualEnd, $bypassFilter);
    }

    public function getFormattedActualEnd($format = NULL)
    {
        $this->__load();
        return parent::getFormattedActualEnd($format);
    }

    public function getFormattedActualStart($format = NULL)
    {
        $this->__load();
        return parent::getFormattedActualStart($format);
    }

    public function getScheduledStart()
    {
        $this->__load();
        return parent::getScheduledStart();
    }

    public function setScheduledStart($scheduledStart)
    {
        $this->__load();
        return parent::setScheduledStart($scheduledStart);
    }

    public function getScheduledEnd()
    {
        $this->__load();
        return parent::getScheduledEnd();
    }

    public function setScheduledEnd($scheduledEnd)
    {
        $this->__load();
        return parent::setScheduledEnd($scheduledEnd);
    }

    public function getFormattedScheduledEnd($format = NULL)
    {
        $this->__load();
        return parent::getFormattedScheduledEnd($format);
    }

    public function getFormattedScheduledStart($format = NULL)
    {
        $this->__load();
        return parent::getFormattedScheduledStart($format);
    }

    public function getPriority()
    {
        $this->__load();
        return parent::getPriority();
    }

    public function setPriority($priority = NULL)
    {
        $this->__load();
        return parent::setPriority($priority);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setState($state = NULL)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setDiscriminator($discriminator)
    {
        $this->__load();
        return parent::setDiscriminator($discriminator);
    }

    public function getAccount()
    {
        $this->__load();
        return parent::getAccount();
    }

    public function setAccount(\Application\Model\Account $account = NULL)
    {
        $this->__load();
        return parent::setAccount($account);
    }

    public function getBusinessUnit()
    {
        $this->__load();
        return parent::getBusinessUnit();
    }

    public function setBusinessUnit(\Application\Model\BusinessUnit $businessUnit = NULL)
    {
        $this->__load();
        return parent::setBusinessUnit($businessUnit);
    }

    public function getCampaign()
    {
        $this->__load();
        return parent::getCampaign();
    }

    public function setCampaign(\Application\Model\Campaign $campaign = NULL)
    {
        $this->__load();
        return parent::setCampaign($campaign);
    }

    public function getCampaignActivity()
    {
        $this->__load();
        return parent::getCampaignActivity();
    }

    public function setCampaignActivity(\Application\Model\CampaignActivity $campaignActivity = NULL)
    {
        $this->__load();
        return parent::setCampaignActivity($campaignActivity);
    }

    public function getContact()
    {
        $this->__load();
        return parent::getContact();
    }

    public function setContact(\Application\Model\Contact $contact = NULL)
    {
        $this->__load();
        return parent::setContact($contact);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getLead()
    {
        $this->__load();
        return parent::getLead();
    }

    public function setLead(\Application\Model\Lead $lead = NULL)
    {
        $this->__load();
        return parent::setLead($lead);
    }

    public function getLongNotes()
    {
        $this->__load();
        return parent::getLongNotes();
    }

    public function setLongNotes($longNotes)
    {
        $this->__load();
        return parent::setLongNotes($longNotes);
    }

    public function getNotes()
    {
        $this->__load();
        return parent::getNotes();
    }

    public function setNotes($notes)
    {
        $this->__load();
        return parent::setNotes($notes);
    }

    public function getOpportunity()
    {
        $this->__load();
        return parent::getOpportunity();
    }

    public function setOpportunity(\Application\Model\Opportunity $opportunity = NULL)
    {
        $this->__load();
        return parent::setOpportunity($opportunity);
    }

    public function getOwner()
    {
        $this->__load();
        return parent::getOwner();
    }

    public function setOwner(\Application\Model\User $user = NULL)
    {
        $this->__load();
        return parent::setOwner($user);
    }

    public function getSubject()
    {
        $this->__load();
        return parent::getSubject();
    }

    public function setSubject($subject)
    {
        $this->__load();
        return parent::setSubject($subject);
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function getLastUpdateDate()
    {
        $this->__load();
        return parent::getLastUpdateDate();
    }

    public function setLastUpdateDate($lastUpdateDate)
    {
        $this->__load();
        return parent::setLastUpdateDate($lastUpdateDate);
    }

    public function getAuditItems()
    {
        $this->__load();
        return parent::getAuditItems();
    }

    public function setAuditItems(\Doctrine\Common\Collections\ArrayCollection $auditItems)
    {
        $this->__load();
        return parent::setAuditItems($auditItems);
    }

    public function addAuditItem(\Application\Model\Audit $auditItem)
    {
        $this->__load();
        return parent::addAuditItem($auditItem);
    }

    public function removeAuditItem(\Application\Model\Audit $auditItem)
    {
        $this->__load();
        return parent::removeAuditItem($auditItem);
    }

    public function getAuditableProperties()
    {
        $this->__load();
        return parent::getAuditableProperties();
    }

    public function getClass()
    {
        $this->__load();
        return parent::getClass();
    }

    public function getDescriptionLink($id = NULL, $route = NULL)
    {
        $this->__load();
        return parent::getDescriptionLink($id, $route);
    }

    public function getDiscriminatorTitle()
    {
        $this->__load();
        return parent::getDiscriminatorTitle();
    }

    public function getListTitle()
    {
        $this->__load();
        return parent::getListTitle();
    }

    public function getRegardingObject()
    {
        $this->__load();
        return parent::getRegardingObject();
    }

    public function getRegardingObjectName($includeLink = false)
    {
        $this->__load();
        return parent::getRegardingObjectName($includeLink);
    }

    public function getTopic()
    {
        $this->__load();
        return parent::getTopic();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'description', 'longNotes', 'notes', 'subject', 'creationDate', 'lastUpdateDate', 'account', 'businessUnit', 'campaign', 'campaignActivity', 'contact', 'lead', 'opportunity', 'owner', 'auditItems', 'priority', 'state', 'status', 'scheduledStart', 'scheduledEnd', 'actualStart', 'actualEnd', 'direction', 'from', 'to', 'bulkOperation', 'bcc', 'cc', 'deliveryReceiptRequested', 'messageId', 'mimetype', 'readReceiptRequested', 'attachments');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}