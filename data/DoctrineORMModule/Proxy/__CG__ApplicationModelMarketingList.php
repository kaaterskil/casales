<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Model;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MarketingList extends \Application\Model\MarketingList implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getBusinessUnit()
    {
        $this->__load();
        return parent::getBusinessUnit();
    }

    public function setBusinessUnit(\Application\Model\BusinessUnit $businessUnit = NULL)
    {
        $this->__load();
        return parent::setBusinessUnit($businessUnit);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getLastUsed()
    {
        $this->__load();
        return parent::getLastUsed();
    }

    public function setLastUsed($lastUsed)
    {
        $this->__load();
        return parent::setLastUsed($lastUsed);
    }

    public function getLockStatus()
    {
        $this->__load();
        return parent::getLockStatus();
    }

    public function setLockStatus($lockStatus)
    {
        $this->__load();
        return parent::setLockStatus($lockStatus);
    }

    public function getMemberCount()
    {
        $this->__load();
        return parent::getMemberCount();
    }

    public function setMemberCount($memberCount)
    {
        $this->__load();
        return parent::setMemberCount($memberCount);
    }

    public function getMemberType()
    {
        $this->__load();
        return parent::getMemberType();
    }

    public function setMemberType($memberType = NULL)
    {
        $this->__load();
        return parent::setMemberType($memberType);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getOwner()
    {
        $this->__load();
        return parent::getOwner();
    }

    public function setOwner(\Application\Model\User $owner = NULL)
    {
        $this->__load();
        return parent::setOwner($owner);
    }

    public function getPurpose()
    {
        $this->__load();
        return parent::getPurpose();
    }

    public function setPurpose($purpose)
    {
        $this->__load();
        return parent::setPurpose($purpose);
    }

    public function getSource()
    {
        $this->__load();
        return parent::getSource();
    }

    public function setSource($source)
    {
        $this->__load();
        return parent::setSource($source);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setState($state = NULL)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setStatus($status = NULL)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function getLastUpdateDate()
    {
        $this->__load();
        return parent::getLastUpdateDate();
    }

    public function setLastUpdateDate($lastUpdateDate)
    {
        $this->__load();
        return parent::setLastUpdateDate($lastUpdateDate);
    }

    public function getBulkOperations()
    {
        $this->__load();
        return parent::getBulkOperations();
    }

    public function setBulkOperations(\Doctrine\Common\Collections\ArrayCollection $bulkOperations)
    {
        $this->__load();
        return parent::setBulkOperations($bulkOperations);
    }

    public function addBulkOperation(\Application\Model\BulkOperation $bulkOperation)
    {
        $this->__load();
        return parent::addBulkOperation($bulkOperation);
    }

    public function removeBulkOperation(\Application\Model\BulkOperation $bulkOperation)
    {
        $this->__load();
        return parent::removeBulkOperation($bulkOperation);
    }

    public function getCampaignActivities()
    {
        $this->__load();
        return parent::getCampaignActivities();
    }

    public function setCampaignActivities(\Doctrine\Common\Collections\ArrayCollection $campaignActivities)
    {
        $this->__load();
        return parent::setCampaignActivities($campaignActivities);
    }

    public function addCampaignActivity(\Application\Model\CampaignActivity $campaignActivity)
    {
        $this->__load();
        return parent::addCampaignActivity($campaignActivity);
    }

    public function removeCampaignActivity(\Application\Model\CampaignActivity $campaignActivity)
    {
        $this->__load();
        return parent::removeCampaignActivity($campaignActivity);
    }

    public function getCampaigns()
    {
        $this->__load();
        return parent::getCampaigns();
    }

    public function setCampaigns(\Doctrine\Common\Collections\ArrayCollection $campaigns)
    {
        $this->__load();
        return parent::setCampaigns($campaigns);
    }

    public function addCampaign(\Application\Model\Campaign $campaign)
    {
        $this->__load();
        return parent::addCampaign($campaign);
    }

    public function removeCampaign(\Application\Model\Campaign $campaign)
    {
        $this->__load();
        return parent::removeCampaign($campaign);
    }

    public function getAccounts()
    {
        $this->__load();
        return parent::getAccounts();
    }

    public function setAccounts(\Doctrine\Common\Collections\ArrayCollection $accounts)
    {
        $this->__load();
        return parent::setAccounts($accounts);
    }

    public function addAccount(\Application\Model\Account $account)
    {
        $this->__load();
        return parent::addAccount($account);
    }

    public function removeAccount(\Application\Model\Account $account)
    {
        $this->__load();
        return parent::removeAccount($account);
    }

    public function getContacts()
    {
        $this->__load();
        return parent::getContacts();
    }

    public function setContacts(\Doctrine\Common\Collections\ArrayCollection $contacts)
    {
        $this->__load();
        return parent::setContacts($contacts);
    }

    public function addContact(\Application\Model\Contact $contact)
    {
        $this->__load();
        return parent::addContact($contact);
    }

    public function removeContact(\Application\Model\Contact $contact)
    {
        $this->__load();
        return parent::removeContact($contact);
    }

    public function getLeads()
    {
        $this->__load();
        return parent::getLeads();
    }

    public function setLeads(\Doctrine\Common\Collections\ArrayCollection $leads)
    {
        $this->__load();
        return parent::setLeads($leads);
    }

    public function addLead(\Application\Model\Lead $lead)
    {
        $this->__load();
        return parent::addLead($lead);
    }

    public function removeLead(\Application\Model\Lead $lead)
    {
        $this->__load();
        return parent::removeLead($lead);
    }

    public function equals(\Application\Stdlib\Object $o)
    {
        $this->__load();
        return parent::equals($o);
    }

    public function getClass()
    {
        $this->__load();
        return parent::getClass();
    }

    public function getListMembers()
    {
        $this->__load();
        return parent::getListMembers();
    }

    public function getNameAsLink()
    {
        $this->__load();
        return parent::getNameAsLink();
    }

    public function removeMatchedCandidates(array $candidates)
    {
        $this->__load();
        return parent::removeMatchedCandidates($candidates);
    }

    public function getFormattedLastUsedDate($format = NULL)
    {
        $this->__load();
        return parent::getFormattedLastUsedDate($format);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'description', 'lastUsed', 'lockStatus', 'memberCount', 'memberType', 'name', 'purpose', 'source', 'state', 'status', 'creationDate', 'lastUpdateDate', 'businessUnit', 'owner', 'bulkOperations', 'campaignActivities', 'campaigns', 'accounts', 'contacts', 'leads');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}